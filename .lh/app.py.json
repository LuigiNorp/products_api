{
    "sourceFile": "app.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1647275999210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1647276296598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,15 @@\n from flask import Flask\n+from products import products\n \n app = Flask(__name__)\n \n+\n\\ No newline at end of file\n+@app.route('/ping')\n+def ping():\n+    return 'pong!!!'\n+\n if __name__ == '__main__':\n-    app.run(debug=True, port=4000)\n+    app.run(debug=True, port=4000)\n+    \"\"\"\n+    debug: means that you can refresh the server automatically\n+    \"\"\"\n\\ No newline at end of file\n"
                },
                {
                    "date": 1647276314429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n from flask import Flask\n-from products import products\n \n app = Flask(__name__)\n+from products import products\n \n \n @app.route('/ping')\n def ping():\n"
                },
                {
                    "date": 1647276376608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n from flask import Flask\n+from products import products\n \n+\n app = Flask(__name__)\n-from products import products\n \n \n @app.route('/ping')\n def ping():\n"
                },
                {
                    "date": 1647276486750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,13 @@\n from flask import Flask\n-from products import products\n \n-\n app = Flask(__name__)\n \n+from products import products\n \n @app.route('/ping')\n def ping():\n-    return 'pong!!!'\n+    return 'Pong!!!'\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647276659910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-from flask import Flask\n+from flask import Flask, jsonify\n \n app = Flask(__name__)\n \n from products import products\n \n @app.route('/ping')\n def ping():\n-    return 'Pong!!!'\n+    return jsonify({'message':'Pong!!!'})\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647276826995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,16 @@\n app = Flask(__name__)\n \n from products import products\n \n-@app.route('/ping')\n+@app.route('/ping') # <-- Por defecto es GET\n def ping():\n     return jsonify({'message':'Pong!!!'})\n \n+@app.route('/products', methods = ['GET'])\n+def getProduct():\n+    return jsonify(products)\n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647276907912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     return jsonify({'message':'Pong!!!'})\n \n @app.route('/products', methods = ['GET'])\n def getProduct():\n-    return jsonify(products)\n+    return jsonify({'products': products})\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647277064611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     return jsonify({'message':'Pong!!!'})\n \n @app.route('/products', methods = ['GET'])\n def getProduct():\n-    return jsonify({'products': products})\n+    return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647277291218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,16 @@\n def ping():\n     return jsonify({'message':'Pong!!!'})\n \n @app.route('/products', methods = ['GET'])\n-def getProduct():\n+def getProducts():\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n+@app.route('/products/<string:product_name>')\n+def getProduct(product_name):\n+    print(product_name)\n+    return 'received'\n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647277505163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n @app.route('/products/<string:product_name>')\n def getProduct(product_name):\n-    print(product_name)\n+    productFound = [product for product in products if product['name'] == product_name]\n     return 'received'\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n"
                },
                {
                    "date": 1647277732326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import json\n from flask import Flask, jsonify\n \n app = Flask(__name__)\n \n@@ -14,9 +15,9 @@\n \n @app.route('/products/<string:product_name>')\n def getProduct(product_name):\n     productFound = [product for product in products if product['name'] == product_name]\n-    return 'received'\n+    return jsonify({'product': productFound[0]})\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647278041050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,12 @@\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n @app.route('/products/<string:product_name>')\n def getProduct(product_name):\n-    productFound = [product for product in products if product['name'] == product_name]\n-    return jsonify({'product': productFound[0]})\n+    productsFound = [product for product in products if product['name'] == product_name]\n+    if (len(productsFound) > 0):\n+        return jsonify({'product': productsFound[0]})\n+    return jsonify({'message': 'Product not found'})\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n"
                },
                {
                    "date": 1647278551010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,12 @@\n     if (len(productsFound) > 0):\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n \n+@app.route('/products', methods = ['POST'])\n+def addProduct():\n+    return 'received'\n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647278902469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import json\n-from flask import Flask, jsonify\n+from flask import Flask, jsonify, requests\n \n app = Flask(__name__)\n \n from products import products\n@@ -21,8 +21,9 @@\n     return jsonify({'message': 'Product not found'})\n \n @app.route('/products', methods = ['POST'])\n def addProduct():\n+    print(requests.json)\n     return 'received'\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n"
                },
                {
                    "date": 1647278936478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import json\n-from flask import Flask, jsonify, requests\n+from flask import Flask, jsonify, request\n \n app = Flask(__name__)\n \n from products import products\n@@ -21,9 +21,9 @@\n     return jsonify({'message': 'Product not found'})\n \n @app.route('/products', methods = ['POST'])\n def addProduct():\n-    print(requests.json)\n+    print(request.json)\n     return 'received'\n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n"
                },
                {
                    "date": 1647279354244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n @app.route('/ping') # <-- Por defecto es GET\n def ping():\n     return jsonify({'message':'Pong!!!'})\n \n-@app.route('/products', methods = ['GET'])\n+@app.route('/products', methods=['GET'])\n def getProducts():\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n @app.route('/products/<string:product_name>')\n@@ -19,9 +19,9 @@\n     if (len(productsFound) > 0):\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n \n-@app.route('/products', methods = ['POST'])\n+@app.route('/product', methods=['POST'])\n def addProduct():\n     print(request.json)\n     return 'received'\n \n"
                },
                {
                    "date": 1647279372189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     if (len(productsFound) > 0):\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n \n-@app.route('/product', methods=['POST'])\n+@app.route('/products', methods=['POST'])\n def addProduct():\n     print(request.json)\n     return 'received'\n \n"
                },
                {
                    "date": 1647290079477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n \n @app.route('/products', methods=['POST'])\n-def addProduct():\n+def addProduct(request):\n     print(request.json)\n     return 'received'\n \n if __name__ == '__main__':\n"
                },
                {
                    "date": 1647290097724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n \n @app.route('/products', methods=['POST'])\n-def addProduct(request):\n+def addProduct():\n     print(request.json)\n     return 'received'\n \n if __name__ == '__main__':\n"
                },
                {
                    "date": 1647290812691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,18 @@\n     return jsonify({'message': 'Product not found'})\n \n @app.route('/products', methods=['POST'])\n def addProduct():\n-    print(request.json)\n+    new_product = {\n+        \"name\": request.json['name'],\n+        \"price\": request.json['price'],\n+        \"quantity\": request.json['quantity']\n+    }\n+    products.append(new_product)\n     return 'received'\n \n+\n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647290901602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         \"price\": request.json['price'],\n         \"quantity\": request.json['quantity']\n     }\n     products.append(new_product)\n-    return 'received'\n+    return jsonify({'message': 'Product added succesfully', 'products': products})\n \n \n \n if __name__ == '__main__':\n"
                },
                {
                    "date": 1647292070908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,22 @@\n     }\n     products.append(new_product)\n     return jsonify({'message': 'Product added succesfully', 'products': products})\n \n+@app.route('/products/<string:product_name>', methods=['PUT'])\n+def editProduct(product_name):\n+    \"\"\"_summary_\n \n+    Args:\n+        product_name (json): _description_\n+    \"\"\"\n+    productFound = [product for product in products if product['name'] == product_name]\n+    if (len(productFound) > 0):\n+        productFound[0]['name'] = request.json['name']\n+        productFound[0]['price'] = request.json['price']\n+        productFound[0]['quantity'] = request.json['quantity']\n \n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647292370440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,16 @@\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n @app.route('/products/<string:product_name>')\n def getProduct(product_name):\n+    \"\"\"_summary_\n+\n+    Args:\n+        product_name (_type_): _description_\n+\n+    Returns:\n+        _type_: _description_\n+    \"\"\"\n     productsFound = [product for product in products if product['name'] == product_name]\n     if (len(productsFound) > 0):\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n@@ -41,8 +49,13 @@\n     if (len(productFound) > 0):\n         productFound[0]['name'] = request.json['name']\n         productFound[0]['price'] = request.json['price']\n         productFound[0]['quantity'] = request.json['quantity']\n+        return jsonify({\n+                \"message\": \"Product Updated\",\n+                \"product\": productFound[0]\n+            })\n+    return jsonify({\"message\": \"Product Not Found\"})\n \n \n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n"
                },
                {
                    "date": 1647295572461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,20 @@\n                 \"product\": productFound[0]\n             })\n     return jsonify({\"message\": \"Product Not Found\"})\n \n+@app.route('/products/<string:product_name>', methods=['DELETE'])\n+def deleteProduct(product_name):\n+    productFound = [product for product in products if product['name'] == product_name]\n+    if productFound > 0:\n+        products.remove(productFound)\n+        return jsonify({\n+            'message': 'Product Deleted',\n+            'products': products\n+        })\n+    return jsonify({\"message\": \"Product Not Found\"})\n \n+\n if __name__ == '__main__':\n     app.run(debug=True, port=4000)\n     \"\"\"\n     debug: means that you can refresh the server automatically\n"
                },
                {
                    "date": 1647295770759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n @app.route('/products/<string:product_name>', methods=['DELETE'])\n def deleteProduct(product_name):\n     productFound = [product for product in products if product['name'] == product_name]\n     if productFound > 0:\n-        products.remove(productFound)\n+        products.remove(productFound[0])\n         return jsonify({\n             'message': 'Product Deleted',\n             'products': products\n         })\n"
                },
                {
                    "date": 1647295818177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n @app.route('/products/<string:product_name>', methods=['DELETE'])\n def deleteProduct(product_name):\n     productFound = [product for product in products if product['name'] == product_name]\n-    if productFound > 0:\n+    if len(productFound) > 0:\n         products.remove(productFound[0])\n         return jsonify({\n             'message': 'Product Deleted',\n             'products': products\n"
                },
                {
                    "date": 1647320148839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,16 +14,8 @@\n     return jsonify({\"products\": products, \"message\": \"Product's List\"})\n \n @app.route('/products/<string:product_name>')\n def getProduct(product_name):\n-    \"\"\"_summary_\n-\n-    Args:\n-        product_name (_type_): _description_\n-\n-    Returns:\n-        _type_: _description_\n-    \"\"\"\n     productsFound = [product for product in products if product['name'] == product_name]\n     if (len(productsFound) > 0):\n         return jsonify({'product': productsFound[0]})\n     return jsonify({'message': 'Product not found'})\n@@ -39,13 +31,8 @@\n     return jsonify({'message': 'Product added succesfully', 'products': products})\n \n @app.route('/products/<string:product_name>', methods=['PUT'])\n def editProduct(product_name):\n-    \"\"\"_summary_\n-\n-    Args:\n-        product_name (json): _description_\n-    \"\"\"\n     productFound = [product for product in products if product['name'] == product_name]\n     if (len(productFound) > 0):\n         productFound[0]['name'] = request.json['name']\n         productFound[0]['price'] = request.json['price']\n"
                }
            ],
            "date": 1647275999210,
            "name": "Commit-0",
            "content": "from flask import Flask\n\napp = Flask(__name__)\n\nif __name__ == '__main__':\n    app.run(debug=True, port=4000)"
        }
    ]
}